@import 'lesshat.less';

// Special slide variables
@first-slide: ~'first-slide'; // For help text


// Body style variables
@body-bgcolor: lighten(#CAE3F5,10%); // #D2E4D3;
@body-font: 'PT Sans Regular', sans-serif;
@body-color: darken(@body-bgcolor,70%);

@body-bgdotscolor: darken(@body-bgcolor,20%);
@body-background-image: 
    radial-gradient(@body-bgdotscolor 10%, transparent 15%), 
    radial-gradient(@body-bgdotscolor 10%, transparent 15%);

@body-text-shadow: none;//1px 1px 2px darken(@body-bgcolor,20%);


// Step style variables
@step-width: 1000px; // Leave this way to ensure it is displayed correctly
@step-padding: 40px;
@step-font-size: 48px;
@step-fallback-margin: 20px;
@step-line-height: 1.5;

@step-inactive-opacity: 0.2;



@font-face {
	font-family: 'OpenSansBold';
	src: url('/home/yo/.fonts/truetype/OpenSans/OpenSans-Bold.ttf');
}

@font-face {
    font-family: "PT Sans Regular";
    src: url('/home/yo/.fonts/truetype/PTSans/PT_Sans-Web-Regular.ttf');
}



/* Background style */

html {
    box-shadow: 0 0 100px rgba(0,0,0,0.5) inset;
    background-size:16px 16px;
    .background-image(@body-background-image);
    background-color: @body-bgcolor;

}

body {
    font-family: @body-font;
    min-height: 740px;

    margin: 0;
    height: 100%;
    color: @body-color;
    text-shadow: @body-text-shadow;

    .background-image(radial-gradient(center bottom, rgba(230,230,230,0.1) 41%, rgba(104,97,89,0.9) 130%));

    box-shadow: 0 0 100px rgba(0,0,0,0.5) inset;
    .backface-visibility(hidden);
}



/* Display fallback message */

.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}



/* To display in fallback mode */

.step { // Some style are here to be correcty displayed in fallback
    position: relative;
    width: @step-width;
    padding: @step-padding;
    margin: @step-fallback-margin auto;

    .box-sizing(border-box);

    font-size: @step-font-size;
    line-height: @step-line-height;
}


.impress-enabled .step {
    margin: 0;
    opacity: @step-inactive-opacity;
    .transition(opacity 1s);
}

// Style of active (current) step
.impress-enabled .step.active { opacity: 1 }







.hint {
    display: none;

    position: fixed;
    left: 0;
    right: 0;
    bottom: 200px;

    background: rgba(0,0,0,0.5);
    color: #EEE;
    text-align: center;

    font-size: 50px;
    padding: 20px;

    z-index: 100;
    opacity: 0;
    .transform(translateY(400px));
    .transition(opacity 1s, -webkit-transform 0.5s 1s);
}
.impress-enabled .hint { display: block }

@impress-on-first-slide: ~'.impress-on-@{first-slide}';
@{impress-on-first-slide} .hint {
    opacity: 1;
    .transform(translateY(0px));
    .transition(opacity 1s 5s, -webkit-transform 0.5s 4.5s);
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled          { pointer-events: none }
.impress-enabled #impress { pointer-events: auto }





/////////////
// effects //
/////////////


// basic slide
.slide() { position:relative; .transition(all 1s 1s); }


// when added, slide from left
.slide-left { .slide(); left: 100px; }
.active .slide-left { left: 0px; }


// effect of growing up
.scale-up { .slide(); .transform(scale(0));}
.keyframes(~'scale-up,0%{transform:scale(0);} 80%{transform:scale(1.2);} to{transform:scale(1);}');
.active .scale-up { .animation(scale-up 1s 1s); }


// appear from left
.window-left { .slide(); left: 100px; opacity:0;}
.active .window-left { left: 0px; opacity:1; }


// effect of appearing from left in lists, each item at a time
@delay-start: 1;
@delay-step: 0.2;
.wleft-lists_(@i) when (@i = 1) { 
    li:nth-child(@{i}) { .transition(all 1s (@delay-start + @i * @delay-step)*1s); } }
.wleft-lists_(@i) when (default()){ 
    @var: ~'li:nth-child(@{i})';
    @{var} { .transition(all 1s (@delay-start + @i * @delay-step)*1s); } 
    .wleft-lists_(@i - 1);
}


// apply above mixin to the actual list
.active .window-left-lists li, .active.window-left-lists li { left:0; opacity: 1;}
.past .window-left-lists li, .past.window-left-lists { left:0; opacity: @step-inactive-opacity; }
.window-left-lists { 
    .wleft-lists_(5); 
    li { left: 100px; opacity:0; position: relative;}
}


.rot_(@i,@n,@cur,@step,@off,@ostep) when (@i <= @n) {
    @lin: ~'li:nth-child(@{i})';
    @{lin} { 
	top: @off;
	position: relative;
	.transform(~'rotate(@{cur})'); 
    }

    .rot_(@i + 1, @n, @cur + @step, @step, @off + @ostep,@ostep);
}
.rot_(@i,@n,@cur,@step) when (default()) {}

.rot-elementss(@n,@base,@sep,@m) when (@m = 1) {
    .rot_(1, n, - (((@n - 1) / 2.0) * @base),@base,- (((@n - 1) / 2.0) * @sep),@sep);
}

.rot-elementss(@n,@base,@sep,@m) when (@m = 0) {
    .rot_(1, @n ,- ((((@n / 2.0) - 1) * @base) + (@base / 2.0)), @base,- ((((@n / 2.0) - 1) * @sep) + (@sep / 2.0)),@sep);

}


// doesnt work...
.rot-elements(@n,@base,@sep) { .rot-elementss(@n,@base,@sep,mod(@n,2)); }




@-webkit-keyframes bounce {
  0% {
    -webkit-transform:translateY(-150%);
    opacity: 0;
}

    to {
    -webkit-transform:translateY(0);
    opacity: 1;
  }
}


.drop {
    opacity: 0;
    display: table-cell;
    .transition(all 1s 1s);
}
.active:not(.past) .drop, .active.drop:not(.past) { opacity: 1; .animation(bounce 2s 1s); }
.past .drop, .past.drop { opacity: 1; }

///////////////
// Theme style
///////////////

// restore margins
h1 { margin: 0 0 10px 0; }
ul { margin: 0; }

// dont display empty headings
.hi(@i) when (@i > 0) { h@{i}:empty { display: none; } .hi(@i - 1); }
.hi(5);


ul.list-unstyled, .list-unstyled ul {
    list-style: none;
    padding-left: 0;
}

.back-hidden { .backface-visibility(hidden); }

.big { 
    h1 { font-size: 100px; }
}


.sm-offset-left > * { margin-left: 20px; }
.md-offset-left > * { margin-left: 50px; }


.hi_center(@i) when (@i > 0) { h@{i} { text-align: center; } .hi_center(@i - 1); }
.centered { .hi_center(5); }





.circle {
    border-radius: 100%;
    width: 500px; height: 500px;
    background-color: @body-color;
    color: @body-bgcolor;
    text-align: center;
    display: table-cell;
    vertical-align: middle;
    opacity: 0;
    .transition(opacity 1s 1s);
    //opacity:1;
}
.active .circle { opacity: 1;  .animation(bounce 2s 1s); }
.past .circle { opacity: 1; }


.crossed { .transition(all 2s 5s); }
.active .crossed { text-decoration: line-through; }


.two-columns {

    .column-1, .column-2{ 
	display: inline-block;
	max-width: 50%;
    }

    .column-1 { float: left; }
    .column-2 { float: right; }

}


.white { color: white; }

// specific markup
#aula-virt-desc{

    &.active { 
	.rot_(1,3,-5deg,5deg,-40px,40px)!important; 
	li { opacity: 1; }
    }

    //.rot-elements(3,10deg,5px);
    //.rot_(1,3,-5deg,5deg,-40px,40px);

    li { 
	position: relative; 
	//top: 0; 
	.transform(rotate(0))!important; .transition(all 1s 1s); 
	opacity: 0;
    }
}


#investigaciÃ³n.past { opacity:1; }

#entrevistas {
    > * { display: table-cell;}
    h1 { vertical-align: middle; padding-right: 100px;}

    &.active { 
	.rot_(1,3,-7deg,7deg,-20px,20px)!important; 
	li { opacity: 1; }
    }

    li { 
	position: relative; 
	.transform(rotate(0))!important; .transition(all 1s 1s); 
	opacity: 0;
    }
}

#cuestionarios {
    > * { display: table-cell; .white}
    h1 { vertical-align: middle; padding-right: 50px; color: @body-color; }

    &.active { 
	.rot_(1,2,-5deg,10deg,-15px,30px)!important; 
	li { opacity: 1; }
    }

    li { 
	position: relative; 
	.transform(rotate(0))!important; .transition(all 1s 1s); 
	opacity: 0;
    }
}